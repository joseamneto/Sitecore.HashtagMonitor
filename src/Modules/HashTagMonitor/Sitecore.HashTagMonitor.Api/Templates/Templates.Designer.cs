
// ------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
// ------------------------------------------------------------------------------

#pragma warning disable 1591

namespace Sitecore.HashTagMonitor.Api.Templates
{
  #region Designer generated code

  using System;
  using Sitecore;
  using Sitecore.Diagnostics;
  using Sitecore.Data.Items;
  using Sitecore.Data.Fields;
  using Sitecore.Data;
  
      
  /// <summary>Represents the "HashTag Folder" template.</summary>
  public partial class HashTagFolder : CustomItem
  {
    public static readonly ID TemplateID = ID.Parse("{25392608-13DE-4475-82D5-9F4BB8C11C65}");

    public HashTagFolder(Item item) : base(item) {
    }

    public static class FieldIds {
      
    }
    
    public static HashTagFolder Create(Item item) 
    {
      return new HashTagFolder(item);
    }

    public static implicit operator Item (HashTagFolder item)
    {
      if (item == null)
      {
        return null;
      }

      return item.InnerItem;
    }

    public static explicit operator HashTagFolder(Item item)
    {
      if (item == null)
      {
        return null;
      }

      if (item.TemplateID != TemplateID)
      {
        return null;
      }

      return Create(item);
    }
  }
      
  /// <summary>Represents the "Pattern Card" template.</summary>
  public partial class PatternCard : CustomItem
  {
    public static readonly ID TemplateID = ID.Parse("{4A6A7E36-2481-438F-A9BA-0453ECC638FA}");

    public PatternCard(Item item) : base(item) {
    }

    public static class FieldIds {
      
      public static readonly ID PatternName = ID.Parse("{FE732790-2DDB-4657-A882-C2FCE1FBF0C9}");

      public static readonly ID Description = ID.Parse("{03DB5C50-D4BF-4E87-9AB4-0E5B4BF4E1A9}");

      public static readonly ID Image = ID.Parse("{98535F26-6C9D-4FD7-A7E2-392C7CB82D65}");

      public static readonly ID Pattern = ID.Parse("{6DA71AD3-5849-4482-9317-D21390E5A348}");

    }
    
    /// <summary>Gets or sets the "Name" field.</summary>
    public string PatternName 
    {
      get 
      {
        return this.InnerItem[FieldIds.PatternName];
      }
      set
      {
        this.InnerItem[FieldIds.PatternName] = value;
      }
    }
  
    /// <summary>Gets or sets the "Description" field.</summary>
    public string Description 
    {
      get 
      {
        return this.InnerItem[FieldIds.Description];
      }
      set
      {
        this.InnerItem[FieldIds.Description] = value;
      }
    }
  
    /// <summary>Gets the "Image" field.</summary>
    public ThumbnailField Image 
    {
      get 
      {
        return this.InnerItem.Fields[FieldIds.Image];
      }
    }
  
    /// <summary>Gets or sets the "Pattern" field.</summary>
    public string Pattern {
      get 
      {
        return this.InnerItem[FieldIds.Pattern];
      }
      set 
      {
        this.InnerItem[FieldIds.Pattern] = value;
      }
    }
  
    public static PatternCard Create(Item item) 
    {
      return new PatternCard(item);
    }

    public static implicit operator Item (PatternCard item)
    {
      if (item == null)
      {
        return null;
      }

      return item.InnerItem;
    }

    public static explicit operator PatternCard(Item item)
    {
      if (item == null)
      {
        return null;
      }

      if (item.TemplateID != TemplateID)
      {
        return null;
      }

      return Create(item);
    }
  }
      
  /// <summary>Represents the "Profile" template.</summary>
  public partial class Profile : CustomItem
  {
    public static readonly ID TemplateID = ID.Parse("{8E0C1738-3591-4C60-8151-54ABCC9807D1}");

    public Profile(Item item) : base(item) {
    }

    public static class FieldIds {
      
      public static readonly ID ProfileName = ID.Parse("{5D9FE5D7-4C45-4A98-A1F5-4796A6DA428B}");

      public static readonly ID Type = ID.Parse("{9FB30799-29EF-46AF-910D-188BD16314B1}");

      public static readonly ID Decay = ID.Parse("{EB6BDFDC-44EC-449C-854B-823F5AF4BE97}");

      public static readonly ID Description = ID.Parse("{E703C891-B96F-449C-A486-A5D3BABFD123}");

      public static readonly ID Image = ID.Parse("{44706C93-A40B-4AC7-A959-6AFC44EE85D3}");

    }
    
    /// <summary>Gets or sets the "Name" field.</summary>
    public string ProfileName 
    {
      get 
      {
        return this.InnerItem[FieldIds.ProfileName];
      }
      set
      {
        this.InnerItem[FieldIds.ProfileName] = value;
      }
    }
  
    /// <summary>Gets or sets the "Type" field.</summary>
    public string Type 
    {
      get 
      {
        return this.InnerItem[FieldIds.Type];
      }
      set
      {
        this.InnerItem[FieldIds.Type] = value;
      }
    }
  
    /// <summary>Gets or sets the "Decay" field.</summary>
    public string Decay {
      get 
      {
        return this.InnerItem[FieldIds.Decay];
      }
      set 
      {
        this.InnerItem[FieldIds.Decay] = value;
      }
    }
  
    /// <summary>Gets or sets the "Description" field.</summary>
    public string Description 
    {
      get 
      {
        return this.InnerItem[FieldIds.Description];
      }
      set
      {
        this.InnerItem[FieldIds.Description] = value;
      }
    }
  
    /// <summary>Gets the "Image" field.</summary>
    public ImageField Image 
    {
      get 
      {
        return this.InnerItem.Fields[FieldIds.Image];
      }
    }
  
    public static Profile Create(Item item) 
    {
      return new Profile(item);
    }

    public static implicit operator Item (Profile item)
    {
      if (item == null)
      {
        return null;
      }

      return item.InnerItem;
    }

    public static explicit operator Profile(Item item)
    {
      if (item == null)
      {
        return null;
      }

      if (item.TemplateID != TemplateID)
      {
        return null;
      }

      return Create(item);
    }
  }
      
  /// <summary>Represents the "Profile Key" template.</summary>
  public partial class ProfileKey : CustomItem
  {
    public static readonly ID TemplateID = ID.Parse("{44AB5107-3C73-42F0-A427-BEC549F944B9}");

    public ProfileKey(Item item) : base(item) {
    }

    public static class FieldIds {
      
      public static readonly ID ProfileKeyName = ID.Parse("{2E1A9AAB-F7C1-49EE-B032-28B98D3688D6}");

      public static readonly ID MinValue = ID.Parse("{271D7B0F-446C-4F24-BFE7-E33C20BF7A41}");

      public static readonly ID MaxValue = ID.Parse("{12E2C64A-5F08-4948-86C8-55AE06AFEEF8}");

      public static readonly ID DefaultValue = ID.Parse("{329B953D-900F-4987-9D68-2B30FF982DBF}");

    }
    
    /// <summary>Gets or sets the "Name" field.</summary>
    public string ProfileKeyName 
    {
      get 
      {
        return this.InnerItem[FieldIds.ProfileKeyName];
      }
      set
      {
        this.InnerItem[FieldIds.ProfileKeyName] = value;
      }
    }
  
    /// <summary>Gets or sets the "MinValue" field.</summary>
    public int MinValue 
    {
      get 
      {
        return MainUtil.GetInt(this.InnerItem[FieldIds.MinValue], 0);
      }
      set
      {
        this.InnerItem[FieldIds.MinValue] = value.ToString();
      }
    }
  
    /// <summary>Gets or sets the "MaxValue" field.</summary>
    public int MaxValue 
    {
      get 
      {
        return MainUtil.GetInt(this.InnerItem[FieldIds.MaxValue], 0);
      }
      set
      {
        this.InnerItem[FieldIds.MaxValue] = value.ToString();
      }
    }
  
    /// <summary>Gets or sets the "DefaultValue" field.</summary>
    public int DefaultValue 
    {
      get 
      {
        return MainUtil.GetInt(this.InnerItem[FieldIds.DefaultValue], 0);
      }
      set
      {
        this.InnerItem[FieldIds.DefaultValue] = value.ToString();
      }
    }
  
    public static ProfileKey Create(Item item) 
    {
      return new ProfileKey(item);
    }

    public static implicit operator Item (ProfileKey item)
    {
      if (item == null)
      {
        return null;
      }

      return item.InnerItem;
    }

    public static explicit operator ProfileKey(Item item)
    {
      if (item == null)
      {
        return null;
      }

      if (item.TemplateID != TemplateID)
      {
        return null;
      }

      return Create(item);
    }
  }
      
  /// <summary>Represents the "HashTag" template.</summary>
  public partial class HashTag : CustomItem
  {
    public static readonly ID TemplateID = ID.Parse("{C302BA3A-3B47-4C23-B531-6D327372F5E2}");

    public HashTag(Item item) : base(item) {
    }

    public static class FieldIds {
      
      public static readonly ID Hashtag = ID.Parse("{1F972D3A-F69D-4A4A-B9DF-811B24F07C15}");

      public static readonly ID PatternCardReference = ID.Parse("{3D910726-BA96-41DF-8AFE-48716E715D53}");

      public static readonly ID GoalReference = ID.Parse("{A9929B36-7C43-424F-A4D1-FA94A4AA3DBC}");

    }
    
    /// <summary>Gets or sets the "Hashtag" field.</summary>
    public string Hashtag 
    {
      get 
      {
        return this.InnerItem[FieldIds.Hashtag];
      }
      set
      {
        this.InnerItem[FieldIds.Hashtag] = value;
      }
    }
  
    /// <summary>Gets the "Pattern Card" field.</summary>
    public ReferenceField PatternCardReference 
    {
      get 
      {
        return this.InnerItem.Fields[FieldIds.PatternCardReference];
      }
    }
  
    /// <summary>Gets the "Goal" field.</summary>
    public ReferenceField GoalReference 
    {
      get 
      {
        return this.InnerItem.Fields[FieldIds.GoalReference];
      }
    }
  
    public static HashTag Create(Item item) 
    {
      return new HashTag(item);
    }

    public static implicit operator Item (HashTag item)
    {
      if (item == null)
      {
        return null;
      }

      return item.InnerItem;
    }

    public static explicit operator HashTag(Item item)
    {
      if (item == null)
      {
        return null;
      }

      if (item.TemplateID != TemplateID)
      {
        return null;
      }

      return Create(item);
    }
  }
      
  /// <summary>Represents the "Goal" template.</summary>
  public partial class Goal : CustomItem
  {
    public static readonly ID TemplateID = ID.Parse("{475E9026-333F-432D-A4DC-52E03B75CB6B}");

    public Goal(Item item) : base(item) {
    }

    public static class FieldIds {
      
    }
    
    public static Goal Create(Item item) 
    {
      return new Goal(item);
    }

    public static implicit operator Item (Goal item)
    {
      if (item == null)
      {
        return null;
      }

      return item.InnerItem;
    }

    public static explicit operator Goal(Item item)
    {
      if (item == null)
      {
        return null;
      }

      if (item.TemplateID != TemplateID)
      {
        return null;
      }

      return Create(item);
    }
  }
  
  #endregion
}

#pragma warning restore 1591
